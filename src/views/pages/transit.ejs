<%- include ('../partials/head') %>
  <%- include ('../partials/menu') %>
    <head>
      <link rel="stylesheet" href="styles/style.css">
      <script src="modal/modal.js"></script>
      <!-- <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%-apikey%>&libraries=places"></script> -->
    </head>
    <div class="col"><%- include ('../partials/message') %></div>
    <main style="padding: 30px; padding-top: 20px;">
      <div class="container">
        <form style="padding-top: 20px;">
          <div class="card">
            <div class="card-body">
              <h4>Get Trip Suggestions</h4>
              <div class="row">
                <div class="col-md-6">
                  <form action="/displayMap" method="POST">
                    <div class="form-group">
                      <label for="from" class="col-xs-2 control label"><i class="fa-regular fa-circle-dot"></i>From Your Location</label>
                      <input type="text" id="departing" name="departing" class="form-control"
                        placeholder="Type Your Location">
                      <input name="departing_lat" type="hidden" id="departing_lat" value="" />
                      <input name="departing_long" type="hidden" id="departing_long" value="" />
                      <label for="to" class="col-xs-2 control label"><i class="fa-solid fa-location-dot"></i>To Your to Destination</label>
                      <input type="text" id="destination" name="destination" class="form-control"
                        placeholder="Type Your Destination">
                      <input name="destination_lat" type="hidden" id="destination_lat" value="" />
                      <input name="destination_long" type="hidden" id="destination_long" value="" />
                    </div>
                    <div style="padding-top: 10px;">
                      <button type="submit" class="btn btn-outline-dark" style="float: right;">Search</button>
                    </div>
                    </fieldset>
                  </form>

                  <div style="padding-top: 40px;" >
                    <div class="card w-80">
                      <div class="card-body">
                          <h5 class="card-title" style="display:inline">My Trips</h5>
                      </div>
                          <ul class="list-group list-group-flush transit-scroller">
                              <!--  -->
                              <% if(data && data != []) {
                                  data.forEach(function(item) {%>
                                      <li class="list-group-item" 
                                        fLat="<%= item.departing_lat %>" fLon="<%= item.departing_long %>"
                                        tLat="<%= item.destination_lat %>" tLon="<%= item.destination_long %>"
                                        onmouseenter="setRouteElement(this)">
                                          <div class="row">
                                              <div class="col-md-6">
                                                  <p> <b>Date:</b> <%- item.time %></p>
                                                  <p> <b>From:</b> <%- item.departing %></p>
                                                  <p> <b>To:</b> <%- item.destination %></p>
                                                  <p> <b>Purpose:</b> <%- item.purpose %></p>
                                              </div>
                                              <div class="col">    
                                                  <b>Seats:</b> 
                                                  <p><%- item.seats %></p>
                                                  <p>TBC</p>
                                              </div>
                                              <div class="col">
                                                <button type="button" onclick="showModal('Trip details','<p><b>Time :</b> <%- item.time %></p> <p><b>From : </b><%- item.departing %></p> <p><b>To :</b> <%- item.destination %></p> <p><b>Purpose : </b><%- item.purpose %></p> <p><b>Seats :</b> <%- item.seats %></p>','<button>bye</button>')" class="btn btn-outline-dark" style="float: right;">Info</button>
                                                <form action="/trip/joinTrip" method="POST">
                                                  <input type="hidden" id="tripID" name="tripID" value="<%- item.trip_id %>">
                                                  <button style="margin-left: 10px;"type="submit" class="btn btn-outline-dark" style="float: right;">Join</button>
                                                </form>
                                              </div>
                                          </div>
                                          </li>
                                   <%})
                              } else {
                                console.log("No trips in database! Please add a trip." + data);
                                %>
                                <p>No trips in database! Please add a trip.</p>
                                <% } %>
                          </div> 
                      </div>
                </div>
                <div class="col">
                  <div id="map"></div>
                  <div id="output"></div>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>

<script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
      key: '<%= apikey %>',
      libraries: 'places'
  });
</script>

<script>
  const initialize = async () => {
      var departInput = document.getElementById('departing');
      var departLat = document.getElementById('departing_lat');
      var departLong = document.getElementById('departing_long');
      var destInput = document.getElementById('destination');
      var destLat = document.getElementById('destination_lat');
      var destLong = document.getElementById('destination_long');

      const { Autocomplete } = await google.maps.importLibrary('places');

      var departAuto = new Autocomplete(departInput);
      var destAuto = new Autocomplete(destInput);
      
      departAuto.addListener('place_changed', () => {
          console.log("Place to changed!");
          var place = departAuto.getPlace();
          if (!place.geometry || !place.geometry.location) {
              console.log("Returned place contains no geometry");
              return;
          }
          let loc = place.geometry.location;
          console.log(loc.toString());
          departLat.value = loc.lat();
          departLong.value = loc.lng();
      });
      destAuto.addListener('place_changed', () => {
          console.log("Place from changed!");
          var place = destAuto.getPlace();
          if (!place.geometry || !place.geometry.location) {
              console.log("Returned place contains no geometry");
              return;
          }
          let loc = place.geometry.location;
          console.log(loc.toString());
          destLat.value = loc.lat();
          destLong.value = loc.lng();
      });
  }

  initialize();
</script>
<script>
var map;
var directionsService, directionsDisplay;

const makeMap = async () => {
  var { Map } = await google.maps.importLibrary('maps');
  const { DirectionsService, DirectionsRenderer } = await google.maps.importLibrary('routes');

  directionsService = new DirectionsService();
  directionsDisplay = new DirectionsRenderer();

  map = new Map(document.getElementById("map"), {
    center: {lat: 45.4215296, lng: -75.6971931},
    zoom: 15,
    mapTypeId: 'roadmap'
  });

  directionsDisplay.setMap(map);
}

const setRoute = async (from, to) => {
  directionsService.route({
    origin: from,
    destination: to,
    travelMode: "DRIVING",
  }, (response, status) => {
    if (status === "OK") {
      directionsDisplay.setDirections(response);
    }
  });
}

const setRouteElement = async (el) => {
  from = {lat: parseFloat(el.getAttribute('flat')), lng: parseFloat(el.getAttribute('flon'))};
  to = {lat: parseFloat(el.getAttribute('tlat')), lng: parseFloat(el.getAttribute('tlon'))};
  await setRoute(from, to);
}

firstFrom = {lat: <%= data[0].departing_lat %>, lng: <%= data[0].departing_long %>}
firstTo = {lat: <%= data[0].destination_lat %>, lng: <%= data[0].destination_long %>}

makeMap().then(() => setRoute(firstFrom, firstTo));
</script>


  </main>




    <%- include ('../partials/footer') %>